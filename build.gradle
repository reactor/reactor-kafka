/*
 * Copyright (c) 2011-2022 VMware Inc. or its affiliates, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/plugins-release" }
  }
}

plugins {
  id("jacoco-report-aggregation")
  alias(libs.plugins.asciidoctor.convert) apply false
  alias(libs.plugins.asciidoctor.pdf) apply false
  alias(libs.plugins.artifactory) apply false
}

ext {
  jdk = JavaVersion.current().majorVersion
  jdkJavadoc = "https://docs.oracle.com/javase/$jdk/docs/api/"
  if (JavaVersion.current().isJava11Compatible()) {
    jdkJavadoc = "https://docs.oracle.com/en/java/javase/$jdk/docs/api/"
  }
  javadocLinks = [
    jdkJavadoc,
    "https://projectreactor.io/docs/core/${libs.versions.reactorCore.get()}/api/",
    "https://www.reactive-streams.org/reactive-streams-${libs.versions.reactiveStreams.get()}-javadoc/",
    "https://kafka.apache.org/${libs.versions.kafka.doc.get()}/javadoc/"
  ] as String[]

  //NOTE: all dependencies, including plugins, are defined in gradle/libs.versions.toml catalog
}

apply from: "${rootDir}/gradle/asciidoc.gradle"
apply from: "${rootDir}/gradle/releaser.gradle"

configurations.all {
  // check for snapshot updates every time
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configure(allprojects) { project ->
  group = 'io.projectreactor.kafka'

  repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }

    if (version.endsWith('-SNAPSHOT')) {
      maven { url 'https://repo.spring.io/snapshot' }
    }
  }

  apply plugin: 'java-library'
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  apply plugin: 'checkstyle'
  apply plugin: 'jacoco'
  apply from: "${rootDir}/gradle/setup.gradle"
  apply from: "${rootDir}/gradle/javadoc.gradle"

  sourceCompatibility = targetCompatibility = 1.8

  [compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:all,-options']

  test {
    maxHeapSize = "1024m"
    testLogging {
      events "passed", "skipped", "failed"
      showStandardStreams = project.hasProperty("showStandardStreams") ?: false
      exceptionFormat = 'full'
    }
    jacoco {
      includes = ['reactor/kafka/sender/**', 'reactor/kafka/receiver/**']
    }
  }

  checkstyle {
    configFile = new File(rootDir, "checkstyle/checkstyle.xml")
    configProperties = [suppressionsXml: "$rootDir/checkstyle/suppressions.xml"]
  }
  test.dependsOn('checkstyleMain', 'checkstyleTest')

  jacocoTestReport {
    dependsOn test
    sourceSets sourceSets.main
    reports {
      html.enabled = true
      xml.enabled = true
    }
  }
  jacocoTestReport.dependsOn test

  dependencies {
    api libs.kafka
    api libs.reactor.core

    compileOnly libs.jsr305
    testCompileOnly libs.jsr305
//    compile "org.slf4j:slf4j-api:$slf4jVersion"

    testImplementation libs.junit4

    testImplementation libs.reactor.test
    testImplementation libs.powermock.core
    testImplementation libs.powermock.junit
    testImplementation libs.powermock.mockito
    testImplementation libs.log4j.api
    testImplementation libs.log4j.core
    testImplementation libs.log4j.slf4j
    // move to compile for 3.0.0 clients
    testCompileOnly libs.slf4j
    testImplementation libs.testcontainers
    testImplementation libs.awaitility
    testImplementation libs.assertj
  }
}

configure(rootProject) {
  archivesBaseName = 'reactor-kafka'
  description = 'Reactor Kafka: A reactive API for Apache Kafka'

  jar {
    manifest {
      attributes 'Automatic-Module-Name': 'reactor.kafka'
    }
  }

  //add specific task artifacts to the publication
  publishing.publications.mavenJava.artifact(docsZip)
}

project(':reactor-kafka-tools') {
  archivesBaseName = 'reactor-kafka-tools'
  description = 'Tools for Reactor Kafka'
  dependencies {
    implementation rootProject
    implementation libs.jopt
    implementation libs.argparse4j

    testImplementation rootProject.sourceSets.test.output
  }

  test {
    systemProperties System.properties
    jacoco {
      enabled = false
    }
  }

  jar {
    manifest {
      attributes 'Automatic-Module-Name': 'reactor.kafka.tools'
    }
  }
}

project(':reactor-kafka-samples') {
  archivesBaseName = 'reactor-kafka-samples'
  description = 'Samples for Reactor Kafka'
  dependencies {
    implementation rootProject

    testImplementation rootProject.sourceSets.test.output
  }

  test {
    jacoco {
      enabled = false
    }
  }

  jar {
    manifest {
      attributes 'Automatic-Module-Name': 'reactor.kafka.samples'
    }
  }
}

// Gradle 7.4 supports aggregated jacoco reports via "jacoco-report-aggregation" plugin
