name: CI
on:
    pull_request: {}
permissions: read-all
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # renovate: tag=v2
      with:
        fetch-depth: 0 #needed by spotless
    - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # renovate: tag=v2
      with:
        distribution: 'temurin'
        java-version: 8
    - uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # renovate: tag=v2
      name: spotless (license header)
      with:
        # the --continue helps spotless find both java and gradle issues
        arguments: spotlessCheck -PspotlessFrom=origin/${{ github.base_ref }} --continue
    - name: how to fix
      if: failure()
      # the foreground (38;5) color code 208 is orange. we also have bold, white bg (38;5;0;48;5;255m), white fg on black bg...
      run: |
        echo -e "\n\033[38;5;0;48;5;208m \u001b[1m How to deal with errors in preliminary job: \u001b[0m\033[0m"
        echo "(Have a look at the steps above to see what failed exactly)"
        echo -e "\n - \u001b[1mSpotless (license headers)\u001b[0m failures on touched java files \033[38;5;255;48;5;0m\u001b[1mcan be automatically fixed by running\u001b[0m:"
        echo -e "   \033[38;5;0;48;5;255m ./gradlew spotlessApply \033[0m"
        echo ""
        exit -1
    - uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # renovate: tag=v2
      name: gradle
      with:
        arguments: build javadoc
    - name: Capture Test Results
      if: failure() && steps.gradle.outcome == 'failure'
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # renovate: tag=v2
      with:
        name: test-results
        path: |
          build/reports/tests/**/*.*
          */build/reports/tests/**/*.*
        retention-days: 3
